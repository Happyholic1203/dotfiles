# -------------------
# -  HTML Elements  -
# -------------------
snippet a
<a href="${1:#}">${0:$1}</a>
endsnippet
snippet a.
<a className="${1}" href="${2:#}">${0:$1}</a>
endsnippet
snippet a#
<a id="${1}" href="${2:#}">${0:$1}</a>
endsnippet
snippet a:ext
<a href="http://${1:example.com}">${0:$1}</a>
endsnippet
snippet a:mail
<a href="mailto:${1:joe@example.com}?subject=${2:feedback}">${0:email me}</a>
endsnippet
snippet ac
<a href="`@+`">${0:`@+`}</a>
endsnippet
snippet abbr
<abbr title="${1}">${0}</abbr>
endsnippet
snippet address
<address>
	${0}
</address>
endsnippet
snippet area
<area shape="${1:rect}" coords="${2}" href="${3}" alt="${0}" />
endsnippet
snippet area+
<area shape="${1:rect}" coords="${2}" href="${3}" alt="${4}" />
area+
endsnippet
snippet area:c
<area shape="circle" coords="${1}" href="${2}" alt="${0}" />
endsnippet
snippet area:d
<area shape="default" coords="${1}" href="${2}" alt="${0}" />
endsnippet
snippet area:p
<area shape="poly" coords="${1}" href="${2}" alt="${0}" />
endsnippet
snippet area:r
<area shape="rect" coords="${1}" href="${2}" alt="${0}" />
endsnippet
snippet article
<article>
	${0}
</article>
endsnippet
snippet article.
<article className="${1}">
	${0}
</article>
endsnippet
snippet article#
<article id="${1}">
	${0}
</article>
endsnippet
snippet aside
<aside>
	${0}
</aside>
endsnippet
snippet aside.
<aside className="${1}">
	${0}
</aside>
endsnippet
snippet aside#
<aside id="${1}">
	${0}
</aside>
endsnippet
snippet audio
<audio src="${1}>${0}</audio>
endsnippet
snippet b
<b>${0}</b>
endsnippet
snippet base
<base href="${1}" target="${0}" />
endsnippet
snippet bdi
<bdi>${0}</bdo>
endsnippet
snippet bdo
<bdo dir="${1}">${0}</bdo>
endsnippet
snippet bdo:l
<bdo dir="ltr">${0}</bdo>
endsnippet
snippet bdo:r
<bdo dir="rtl">${0}</bdo>
endsnippet
snippet blockquote
<blockquote>
	${0}
</blockquote>
endsnippet
snippet br
<br />
endsnippet
snippet button
<button type="${1:submit}">${0}</button>
endsnippet
snippet button.
<button className="${1:button}" type="${2:submit}">${0}</button>
endsnippet
snippet button#
<button id="${1}" type="${2:submit}">${0}</button>
endsnippet
snippet button:s
<button type="submit">${0}</button>
endsnippet
snippet button:r
<button type="reset">${0}</button>
endsnippet
snippet canvas
<canvas>
	${0}
</canvas>
endsnippet
snippet caption
<caption>${0}</caption>
endsnippet
snippet cite
<cite>${0}</cite>
endsnippet
snippet code
<code>${0}</code>
endsnippet
snippet col
<col />
endsnippet
snippet col+
<col />
col+
endsnippet
snippet colgroup
<colgroup>
	${0}
</colgroup>
endsnippet
snippet colgroup+
<colgroup>
<col />
col+${0}
</colgroup>
endsnippet
snippet command
<command type="command" label="${1}" icon="${0}" />
endsnippet
snippet command:c
<command type="checkbox" label="${1}" icon="${0}" />
endsnippet
snippet command:r
<command type="radio" radiogroup="${1}" label="${2}" icon="${0}" />
endsnippet
snippet datagrid
<datagrid>
	${0}
</datagrid>
endsnippet
snippet datalist
<datalist>
	${0}
</datalist>
endsnippet
snippet datatemplate
<datatemplate>
	${0}
</datatemplate>
endsnippet
snippet dd
<dd>${0}</dd>
endsnippet
snippet dd.
<dd className="${1}">${0}</dd>
endsnippet
snippet dd#
<dd id="${1}">${0}</dd>
endsnippet
snippet del
<del>${0}</del>
endsnippet
snippet details
<details>${0}</details>
endsnippet
snippet dfn
<dfn>${0}</dfn>
endsnippet
snippet dialog
<dialog>
	${0}
</dialog>
endsnippet
snippet div
<div>
	${0}
</div>
endsnippet
snippet div.
<div className="${1}">
	${0}
</div>
endsnippet
snippet div#
<div id="${1}">
	${0}
</div>
endsnippet
snippet dl
<dl>
	${0}
</dl>
endsnippet
snippet dl.
<dl className="${1}">
	${0}
</dl>
endsnippet
snippet dl#
<dl id="${1}">
	${0}
</dl>
endsnippet
snippet dl+
<dl>
<dt>${1}</dt>
<dd>${2}</dd>
dt+${0}
</dl>
endsnippet
snippet dt
<dt>${0}</dt>
endsnippet
snippet dt.
<dt className="${1}">${0}</dt>
endsnippet
snippet dt#
<dt id="${1}">${0}</dt>
endsnippet
snippet dt+
<dt>${1}</dt>
<dd>${2}</dd>
dt+${0}
endsnippet
snippet em
<em>${0}</em>
endsnippet
snippet embed
<embed src="${1}" type="${0}" />
endsnippet
snippet fieldset
<fieldset>
	${0}
</fieldset>
endsnippet
snippet fieldset.
<fieldset className="${1}">
	${0}
</fieldset>
endsnippet
snippet fieldset#
<fieldset id="${1}">
	${0}
</fieldset>
endsnippet
snippet fieldset+
<fieldset>
<legend><span>${1}</span></legend>
${2}
</fieldset>
fieldset+${0}
endsnippet
snippet figcaption
<figcaption>${0}</figcaption>
endsnippet
snippet figure
<figure>${0}</figure>
endsnippet
snippet figure#
<figure id="${1}">
	${0}
</figure>
endsnippet
snippet figure.
<figure className="${1}">
	${0}
</figure>
endsnippet
snippet footer
<footer>
	${0}
</footer>
endsnippet
snippet footer.
<footer className="${1}">
	${0}
</footer>
endsnippet
snippet footer#
<footer id="${1}">
	${0}
</footer>
endsnippet
snippet form
<form onSubmit={this.${1:props.onSubmit}} method="${2:post}">
	${0}
</form>
endsnippet
snippet form.
<form onSubmit={this.${1:props.onSubmit}} className="$2" method="${3:post}">
	${0}
</form>
endsnippet
snippet h1
<h1>${0}</h1>
endsnippet
snippet h1.
<h1 className="${1}">${0}</h1>
endsnippet
snippet h1#
<h1 id="${1}">${0}</h1>
endsnippet
snippet h2
<h2>${0}</h2>
endsnippet
snippet h2.
<h2 className="${1}">${0}</h2>
endsnippet
snippet h2#
<h2 id="${1}">${0}</h2>
endsnippet
snippet h3
<h3>${0}</h3>
endsnippet
snippet h3.
<h3 className="${1}">${0}</h3>
endsnippet
snippet h3#
<h3 id="${1}">${0}</h3>
endsnippet
snippet h4
<h4>${0}</h4>
endsnippet
snippet h4.
<h4 className="${1}">${0}</h4>
endsnippet
snippet h4#
<h4 id="${1}">${0}</h4>
endsnippet
snippet h5
<h5>${0}</h5>
endsnippet
snippet h5.
<h5 className="${1}">${0}</h5>
endsnippet
snippet h5#
<h5 id="${1}">${0}</h5>
endsnippet
snippet h6
<h6>${0}</h6>
endsnippet
snippet h6.
<h6 className="${1}">${0}</h6>
endsnippet
snippet h6#
<h6 id="${1}">${0}</h6>
endsnippet
snippet header
<header>
	${0}
</header>
endsnippet
snippet header.
<header className="${1}">
	${0}
</header>
endsnippet
snippet header#
<header id="${1}">
	${0}
</header>
endsnippet
snippet hgroup
<hgroup>
	${0}
</hgroup>
endsnippet
snippet hgroup.
<hgroup className="${1}>
	${0}
</hgroup>
endsnippet
snippet hr
<hr />
endsnippet
snippet i
<i>${0}</i>
endsnippet
snippet iframe
<iframe src="${1}" frameborder="0"></iframe>
endsnippet
snippet iframe.
<iframe className="${1}" src="${2}" frameborder="0"></iframe>
endsnippet
snippet iframe#
<iframe id="${1}" src="${2}" frameborder="0"></iframe>
endsnippet
snippet img
<img src="${1}" alt="${2}" />
endsnippet
snippet img.
<img className="${1}" src="${2}" alt="${3}" />
endsnippet
snippet img#
<img id="${1}" src="${2}" alt="${3}" />
endsnippet
snippet input
<input
	type="${1:text/submit/hidden/button/image}"
	name="${2}"`!p snip.rv = ' onChange=%sthis.on' % LEFT_QUOTE if t[1] == 'text' else ''`${4:`!p snip.rv = 'TextChange' if t[1] == 'text' else ' property=?'`}`!p snip.rv = RIGHT_QUOTE if t[1] == 'text' else ''`
	value=`!p snip.rv = input_left_quote(t[1])`${3:`!p input_value(t[1], snip)`}`!p snip.rv = input_right_quote(t[1])` />
endsnippet
snippet input.
<input
	className="${1}"
	type="${2:text/submit/hidden/button/image}"
	name="${3}"`!p snip.rv = ' onChange=%sthis.on' % LEFT_QUOTE if t[2] == 'text' else ''`${5:`!p snip.rv = 'TextChange' if t[2] == 'text' else 'property=?'`}`!p snip.rv = RIGHT_QUOTE if t[2] == 'text' else ''`
	value=`!p snip.rv = input_left_quote(t[2])`${4:`!p input_value(t[2], snip)`}`!p snip.rv = input_right_quote(t[2])` />
endsnippet
snippet input:text
<input type="text" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:submit
<input type="submit" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:hidden
<input type="hidden" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:button
<input type="button" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:image
<input type="image" name="${1}" id="${2:$1}" src="${3}" alt="${4}" />
endsnippet
snippet input:checkbox
<input type="checkbox" name="${1}" id="${2:$1}" />
endsnippet
snippet input:radio
<input type="radio" name="${1}" id="${2:$1}" />
endsnippet
snippet input:color
<input type="color" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:date
<input type="date" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:datetime
<input type="datetime" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:datetime-local
<input type="datetime-local" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:email
<input type="email" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:file
<input type="file" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:month
<input type="month" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:number
<input type="number" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:password
<input type="password" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:range
<input type="range" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:reset
<input type="reset" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:search
<input type="search" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:time
<input type="time" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:url
<input type="url" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet input:week
<input type="week" name="${1}" id="${2:$1}" value="${3}" />
endsnippet
snippet ins
<ins>${0}</ins>
endsnippet
snippet kbd
<kbd>${0}</kbd>
endsnippet
snippet keygen
<keygen>${0}</keygen>
endsnippet
snippet label
<label for="${0:$1}">${1}</label>
endsnippet
snippet label:i
<label for="${2:$1}">${1}</label>
<input type="${3:text/submit/hidden/button}" name="${4:$2}" id="${5:$2}" value="${6}" />
endsnippet
snippet label:s
<label for="${2:$1}">${1}</label>
<select name="${3:$2}" id="${4:$2}">
<option value="${5}">${0:$5}</option>
</select>
endsnippet
snippet legend
<legend>${0}</legend>
endsnippet
snippet legend+
<legend><span>${0}</span></legend>
endsnippet
snippet li
<li>${0}</li>
endsnippet
snippet li.
<li className="${1}">${0}</li>
endsnippet
snippet li+
<li>${1}</li>
li+
endsnippet
snippet lia
<li><a href="${0:#}">${1}</a></li>
endsnippet
snippet lia+
<li><a href="${2:#}">${1}</a></li>
lia+
endsnippet
snippet main
<main role="main">
	${0}
</main>
endsnippet
snippet map
<map name="${1}">
	${0}
</map>
endsnippet
snippet map.
<map className="${1}" name="${2}">
	${0}
</map>
endsnippet
snippet map#
<map name="${1}" id="${2:$1}>
	${0}
</map>
endsnippet
snippet map+
<map name="${1}">
<area shape="${2}" coords="${3}" href="${4}" alt="${5}" />${6}
</map>
endsnippet
snippet mark
<mark>${0}</mark>
endsnippet
snippet menu
<menu>
	${0}
</menu>
endsnippet
snippet menu:c
<menu type="context">
	${0}
</menu>
endsnippet
snippet menu:t
<menu type="toolbar">
	${0}
</menu>
endsnippet
snippet meta
<meta http-equiv="${1}" content="${2}" />
endsnippet
snippet meta:s
<meta ${0} />
endsnippet
snippet meta:d
<meta name="description" content="${0}" />
endsnippet
snippet meta:compat
<meta http-equiv="X-UA-Compatible" content="IE=${1:7,8,edge}" />
endsnippet
snippet meta:refresh
<meta http-equiv="refresh" content="text/html;charset=UTF-8" />
endsnippet
snippet meta:utf
<meta http-equiv="content-type" content="text/html;charset=UTF-8" />
endsnippet
snippet meter
<meter>${0}</meter>
endsnippet
snippet nav
<nav>
	${0}
</nav>
endsnippet
snippet nav.
<nav className="${1}">
	${0}
</nav>
endsnippet
snippet nav#
<nav id="${1}">
	${0}
</nav>
endsnippet
snippet noscript
<noscript>
	${0}
</noscript>
endsnippet
snippet object
<object data="${1}" type="${2}">
${3}
</object>
# Embed QT Movie
endsnippet
snippet movie
<object width="$2" height="$3" classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B"
codebase="http://www.apple.com/qtactivex/qtplugin.cab">
<param name="src" value="$1" />
<param name="controller" value="$4" />
<param name="autoplay" value="$5" />
<embed src="${1:movie.mov}"
width="${2:320}" height="${3:240}"
controller="${4:true}" autoplay="${5:true}"
scale="tofit" cache="true"
pluginspage="http://www.apple.com/quicktime/download/" />
</object>
endsnippet
snippet ol
<ol>
	${0}
</ol>
endsnippet
snippet ol.
<ol className="${1}">
	${0}
</ol>
endsnippet
snippet ol#
<ol id="${1}">
	${0}
</ol>
endsnippet
snippet ol+
<ol>
<li>${1}</li>
li+${0}
</ol>
endsnippet
snippet opt
<option value="${1}">${0:$1}</option>
endsnippet
snippet opt+
<option value="${1}">${2:$1}</option>
opt+${0}
endsnippet
snippet optt
<option>${0}</option>
endsnippet
snippet optgroup
<optgroup>
<option value="${1}">${2:$1}</option>
opt+${0}
</optgroup>
endsnippet
snippet output
<output>${0}</output>
endsnippet
snippet p
<p>${0}</p>
endsnippet
snippet p.
<p className="${1}">${0}</p>
endsnippet
snippet p#
<p id="${1}">${0}</p>
endsnippet
snippet param
<param name="${1}" value="${2}" />
endsnippet
snippet pre
<pre>
	${0}
</pre>
endsnippet
snippet progress
<progress>${0}</progress>
endsnippet
snippet q
<q>${0}</q>
endsnippet
snippet rp
<rp>${0}</rp>
endsnippet
snippet rt
<rt>${0}</rt>
endsnippet
snippet ruby
<ruby>
<rp><rt>${0}</rt></rp>
</ruby>
endsnippet
snippet s
<s>${0}</s>
endsnippet
snippet samp
<samp>
	${0}
</samp>
endsnippet
snippet script
<script type="text/javascript" charset="utf-8">
	${0}
</script>
endsnippet
snippet scripts
<script src="${0}.js"></script>
endsnippet
snippet scriptt
<script type="${1}" id="${2}">
	${0}
</script>
endsnippet
snippet scriptsrc
<script src="${0}.js" type="text/javascript" charset="utf-8"></script>
endsnippet
snippet section
<section>
	${0}
</section>
endsnippet
snippet section.
<section className="${1}">
	${0}
</section>
endsnippet
snippet section#
<section id="${1}">
	${0}
</section>
endsnippet
snippet select
<select name="${1}" id="${2:$1}">
	${0}
</select>
endsnippet
snippet select.
<select name="${1}" id="${2:$1}" className="${3}>
	${0}
</select>
endsnippet
snippet select+
<select name="${1}" id="${2:$1}">
<option value="${3}">${4:$3}</option>
opt+${0}
</select>
endsnippet
snippet small
<small>${0}</small>
endsnippet
snippet source
<source src="${1}" type="${2}" media="${0}" />
endsnippet
snippet span
<span>${0}</span>
endsnippet
snippet span.
<span className="${1}">${0}</span>
endsnippet
snippet span#
<span id="${1}">${0}</span>
endsnippet
snippet strong
<strong>${0}</strong>
endsnippet
snippet sub
<sub>${0}</sub>
endsnippet
snippet summary
<summary>
	${0}
</summary>
endsnippet
snippet sup
<sup>${0}</sup>
endsnippet
snippet table
<table>
	${0}
</table>
endsnippet
snippet table.
<table className="${1}">
	${0}
</table>
endsnippet
snippet table#
<table id="${1}">
	${0}
</table>
endsnippet
snippet tbody
<tbody>
	${0}
</tbody>
endsnippet
snippet td
<td>${0}</td>
endsnippet
snippet td.
<td className="${1}">${0}</td>
endsnippet
snippet td#
<td id="${1}">${0}</td>
endsnippet
snippet td+
<td>${1}</td>
td+${0}
endsnippet
snippet textarea
<textarea name="${1}" id="${2:$1}" rows="${3:8}" cols="${4:40}">${5}</textarea>
endsnippet
snippet tfoot
<tfoot>
	${0}
</tfoot>
endsnippet
snippet th
<th>${0}</th>
endsnippet
snippet th.
<th className="${1}">${0}</th>
endsnippet
snippet th#
<th id="${1}">${0}</th>
endsnippet
snippet th+
<th>${1}</th>
th+${0}
endsnippet
snippet thead
<thead>
	${0}
</thead>
endsnippet
snippet time
<time datetime="${1}" pubdate="${2:$1}">${0:$1}</time>
endsnippet
snippet title
<title>${0:`substitute(vim_endsnippet
snippets#Filename('', 'Page Title'), '^.', '\u&', '')`}</title>
endsnippet
snippet tr
<tr>
	${0}
</tr>
endsnippet
snippet tr+
<tr>
<td>${1}</td>
td+${0}
</tr>
endsnippet
snippet track
<track src="${1}" srclang="${2}" label="${3}" default="${4:default}>${5}</track>
endsnippet
snippet ul
<ul>
	${0}
</ul>
endsnippet
snippet ul.
<ul className="${1}">
	${0}
</ul>
endsnippet
snippet ul#
<ul id="${1}">
	${0}
</ul>
endsnippet
snippet ul+
<ul>
<li>${1}</li>
li+${0}
</ul>
endsnippet
snippet var
<var>${0}</var>
endsnippet
snippet video
<video src="${1} height="${2}" width="${3}" preload="${5:none}" autoplay="${6:autoplay}>${7}</video>
endsnippet
snippet wbr
<wbr />
endsnippet

# ---------------------
# -  react-bootstrap  -
# ---------------------

snippet Grid "Grid" b
<Grid>
	<Row>
	  <!-- extra small: $1, medium: $2, large: $3 -->
	  <Col xs={${1:12}} md={${2:8}} lg={${3:4}}>$4</Col>
	</Row>
</Grid>$0
endsnippet


# ---------------
# -  Shortcuts  -
# ---------------
snippet ajax
	$.ajax({
		url: '${1:mydomain.com/url}',
		type: '${2:POST}',
		dataType: '${3:xml/html/script/json}',
		contentType: '${4:application/json}',
		data: JSON.stringify(${5:data}),
		complete: function (jqXHR, textStatus) {
			${6:// callback}
		},
		success: function (data, textStatus, jqXHR) {
			${7:// success callback}
		},
		error: function (jqXHR, textStatus, errorThrown) {
			${0:// error callback}
		}
	});
endsnippet

snippet reactnew "new react file" b
var React = require('react');
var ReactDOM = require('react-dom');

var ${1:App} = React.createClass({
	getInitialState: function() {
		return {$3};
	},
	render: function() {
		return (
			<div className="`!p snip.rv = (t[1][0].lower() + t[1][1:]) if len(t[1]) > 0 else ''`">
				$0
			</div>
		);
	}
});

ReactDOM.render(
	<$1 />,
	document.getElementById('${2:content}')
);
endsnippet

snippet reactcls "React.createClass" b
var ${1:Class} = React.createClass({
	getInitialState: function() {
		return {$2};
	},
	render: function() {
		return (
			<div className="`!p snip.rv = t[1][0].lower() + t[1][1:] if len(t[1]) > 0 else ''`">
				$0
			</div>
		);
	}
});
endsnippet

snippet webpack.config.js "default webpack.config.js" b
module.exports = {
	entry: "./app/components/Main.js",
	output: {
		path: __dirname,
		filename: "public/bundle.js"
	},
	module: {
		loaders: [
			{ test: /\.css$/, loader: "style!css" },
			{
				test: /\.jsx?$/,
				loader: 'babel',
				exclude: /(node_modules|bower_components)/,
				query: {
					presets: ["react", "es2015"]
				}
			}
		]
	}
};
endsnippet

# https://github.com/gowravshekar/bootstrap-webpack#usage
snippet bootstraploaders "bootstrap loaders" b
// the url-loader uses DataUrls.
// the file-loader emits files.
{test: /\.(woff|woff2)(\?v=\d+\.\d+\.\d+)?$/, loader: 'url?limit=10000&mimetype=application/font-woff'},
{test: /\.ttf(\?v=\d+\.\d+\.\d+)?$/, loader: 'url?limit=10000&mimetype=application/octet-stream'},
{test: /\.eot(\?v=\d+\.\d+\.\d+)?$/, loader: 'file'},
{test: /\.svg(\?v=\d+\.\d+\.\d+)?$/, loader: 'url?limit=10000&mimetype=image/svg+xml'}
endsnippet

snippet f "function" "re.match('(.*)[^(]f$', snip.buffer[snip.line])" ew
function(${1}) {
	${VISUAL}$0
}`!p
line = snip.context.group(1)
if re.match('.*:\s*', line):
	snip.rv = ','
elif re.match('.*=\s*', line):
	snip.rv = ';'
elif re.match('.*\(f', line):
	snip.rv = ');'
`
endsnippet

snippet (f "lambda" "re.match('^\s*\w+.*\(f$', snip.buffer[snip.line])" ie
(function($1) {
	$2
});$0
endsnippet

snippet (f "lambda" "re.match('^\s*\(f$', snip.buffer[snip.line])" e
(function($2) {
	$3
}($1));$0
endsnippet

snippet }, "next object"
}, {
	${1:key}: ${2:value}
}$0
endsnippet

snippet [ "cross-line array" "re.match('(.*)', snip.buffer[snip.line])" e
[
	$1
]`!p snip.rv = ';' if '=' in snip.context.group(1) else ''`$0
endsnippet

snippet { "stand-alone object" "re.match('.*=\s*{$', snip.buffer[snip.line])" e
{
	${1:attr}: ${2:value}
};$0
endsnippet

snippet { "object" "re.match('{$', snip.buffer[snip.line])" e
{
	${1:attr}: ${2:value}
}
endsnippet

# -----------------------------
# -  Global python functions  -
# -----------------------------

global !p

LEFT_QUOTE = '{'
RIGHT_QUOTE = '}'

button_types = ('button', 'submit')
def input_left_quote(input_type):
	if input_type in button_types:
		return '"'
	elif input_type == 'text':
		return '{this.state.'
	else:
		return ''

def input_right_quote(input_type):
	if input_type in button_types:
		return '"'
	elif input_type == 'text':
		return '}'
	else:
		return ''

def input_value(input_type, snip):
	if input_type in button_types:
		snip.rv = 'submit'
	elif input_type == 'text':
		snip.rv = 'value'
	else:
		snip.rv = ''

endglobal
